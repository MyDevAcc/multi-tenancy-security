entity Project {
    id  String required,
	name String required minlength(3),
	description String required
}

entity MicroService {
    id  String required,
	name String required minlength(3),
	description String required
}

entity SecurityPermission {
    id  String required,
	name String required minlength(3),
	description String required
}

entity SecurityRole {
    id  String required,
	name String required minlength(3),
	description String required
}

entity SecurityGroup {
    id  String required,
	name String required minlength(3),
	description String required
}

entity Partner {
    id  String required,
	name String required minlength(3),
	description String required
}

entity Tenant {
    id String required,
    tenantId String required,
    name String required minlength(3),
    description String required
}

entity PartnerProjectAccess {
    id  String required,
	name String required minlength(3),
	description String required
}

entity TenantProjectAccess {
    id  String required,
	name String required minlength(3),
	description String required
}

entity SSOSecurityGroup {
    id  String required,
    shortName String required minlength(5),
    longName String required minlength(5),
	description String required
}

/*
*/
entity OauthSecurityGroup {
    id  String required,
    shortName String required minlength(5),
    longName String required minlength(5),
	description String required
}

entity UserSecurityDetails {
    id  String required,
    purpose String required,
    description String required
}

entity UserSessionContext {
    id  String required,
    ip  String required,
    loginTime Instant required
}

/* SecurityRole Relationships */
relationship ManyToMany {
  SecurityRole{securityPermission(name) required} to SecurityPermission
}

/* SecurityGroup Relationships */
relationship ManyToMany {
  SecurityGroup{securityRole(name) required} to SecurityRole
}

relationship ManyToOne {
  MicroService{project(name) required} to Project
}

relationship ManyToOne {
  SecurityPermission{microService(name) required} to MicroService
}

relationship ManyToMany {
  SecurityRole{microService(name) required} to MicroService,
  SecurityGroup{microService(name) required} to MicroService
}

/* Tenant Relationships */
relationship ManyToMany {
  Tenant{subTenants(name)} to Tenant
}

relationship ManyToOne {
  Tenant{partner(name) required} to Partner
}

relationship OneToOne {
  Tenant{parentTenant(name)} to Tenant,
  TenantProjectAccess{tenant(name)} to Tenant,
  PartnerProjectAccess{partner(name)} to Partner
}

/* UserSecurityDetails Relationships */
relationship ManyToOne {
  UserSecurityDetails{user(login) required} to User
}

relationship ManyToMany {
  UserSecurityDetails{oauthSecurityGroup(shortName)} to OauthSecurityGroup
}

/* UserSessionContext Relationships */
relationship ManyToOne {
  UserSessionContext{user(login) required} to User,
  SSOSecurityGroup {partner(name) required} to Partner,
  OauthSecurityGroup {partner(name) required} to Partner
}

relationship ManyToMany {
  SSOSecurityGroup {tenant(name) required} to Tenant,
  OauthSecurityGroup {tenant(name) required} to Tenant
}

/* Project Relationships */

relationship ManyToMany {
  PartnerProjectAccess{project(name) required} to Project,
  TenantProjectAccess{project(name) required} to Project
}

relationship ManyToMany {
  SSOSecurityGroup{securityGroup(name) required} to SecurityGroup,
  OauthSecurityGroup{securityGroup(name) required} to SecurityGroup
}

paginate all with pagination
service all with serviceImpl
microservice all with uua
